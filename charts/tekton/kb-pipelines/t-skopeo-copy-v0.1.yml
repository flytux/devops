piVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: skopeo-copy
  labels:
    app.kubernetes.io/version: "0.1"
  annotations:
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/categories: CLI
    tekton.dev/tags: cli
    tekton.dev/displayName: "skopeo copy"
    tekton.dev/platforms: "linux/amd64,linux/s390x,linux/ppc64le,linux/arm64"
spec:
  description: >-
    Skopeo is a command line tool for working with remote image registries.

    Skopeo doesnâ€™t require a daemon to be running while performing its operations.
    In particular, the handy skopeo command called copy will ease the whole image
    copy operation. The copy command will take care of copying the image from
    internal.registry to production.registry. If your production registry requires
    credentials to login in order to push the image, skopeo can handle that as well.

  #workspaces:
  #  - name: images-url
  params:
    - name: srcImageURL
      description: URL of the image to be copied to the destination registry
      type: string
      default: ""
    - name: destImageURL
      description: URL of the image where the image from source should be copied to
      type: string
      default: ""
    - name: destImageTAG
      description: URL of the image where the image from source should be copied to
      type: string
      default: ""
    - name: srcTLSverify
      description: Verify the TLS on the src registry endpoint
      type: string
      default: "false"
    - name: destTLSverify
      description: Verify the TLS on the dest registry endpoint
      type: string
      default: "false"

  stepTemplate:
    envFrom:
    - secretRef:
        name: skopeo-secret

  steps:
    - name: skopeo-copy
      image: 10.136.225.51:5000/skopeo/stable:v1.4.1
      script: |
        # Function to copy multiple images.
        #
        #copyimages() {
        #  filename='$(workspaces.images-url.path)/url.txt'
        #  while IFS= read line || [ -n "$line" ]
        #  do
        #    cmd=""
        #    for url in $line
        #    do
        #      # echo $url
        #      cmd="$cmd \
        #          $url"
        #    done
        #    skopeo copy --dest-creds $DEST_REG_USER:$DEST_REG_PASSWORD $cmd --src-tls-verify=$(params.srcTLSverify) --dest-tls-verify=$(params.destTLSverify)
        #    echo $cmd
        #  done < "$filename"
        #}
        #
        # If single image is to be copied then, it can be passed through
        # params in the taskrun.

        set +x
        if [ "$(params.srcImageURL)" != "" ] && [ "$(params.destImageURL)" != "" ] ; then
          skopeo copy --dest-creds $DEST_REG_USER:$DEST_REG_PASSWORD "docker://$(params.srcImageURL)" "docker://$(params.destImageURL):$(params.destImageTAG)" --src-tls-verify=$(params.srcTLSverify) --dest-tls-verify=$(params.destTLSverify)
        set -x
        echo "Image copied from $(params.srcImageURL) to $(params.destImageURL):$(params.destImageTAG)"
        else
          # If file is provided as a configmap in the workspace then multiple images can be copied.
          #
          #copyimages
          echo "Please set Image URLs!!! No Images to copy to additional repo"
        fi


