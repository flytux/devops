---
apiVersion: v1
kind: Namespace
metadata:
  name: dev
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: k8s-rbac
subjects:
  - kind: ServiceAccount
    name: default
    namespace: dev
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: docker-sock-pv
  labels:
    type: host
spec:
  storageClassName: manual
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/var/run/docker.sock"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: dev
  name: docker-sock-pvc
  labels:
    type: host
spec:
  storageClassName: manual
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  volumeName: docker-sock-pv

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: dev-pv
  labels:
    type: host
spec:
  storageClassName: manual
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data/dev"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: dev-pvc
  namespace: dev
spec:
  storageClassName: manual
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  volumeName: dev-pv

---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: dev
  name: dev
spec:
  selector:
    matchLabels:
      app: dev
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: dev
    spec:
      hostAliases:
      - ip: 157.245.240.248
        hostnames:
        - kw01
      containers:
      - name: dev
        image: 157.245.240.248:30005/kw/dev:v1
        imagePullPolicy: IfNotPresent
        env:
          - name: TZ
            value: Asia/Seoul
        volumeMounts:
        - name: dev-volume
          mountPath: /root/works
        - name: docker-sock-volume
          mountPath: /var/run/docker.sock
      volumes:
        - name: dev-volume
          persistentVolumeClaim:
            claimName: dev-pvc
        - name: docker-sock-volume
          persistentVolumeClaim:
            claimName: docker-sock-pvc
---
apiVersion: v1
kind: Service
metadata:
  namespace: dev
  name: dev
  labels:
    app: dev
spec:
  ports:
  - port: 22
    targetPort: 22
    nodePort: 30022
    name: ssh-port
  type: NodePort
  selector:
    app: dev
